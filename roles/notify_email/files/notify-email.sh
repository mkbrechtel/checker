#!/bin/bash
# Email notification script for checker monitoring
set -euo pipefail

# Load configuration
if [ -f /etc/checker/notify_email.env ]; then
    source /etc/checker/notify_email.env
else
    echo "Error: /etc/checker/notify_email.env not found" >&2
    exit 1
fi

# Arguments from checker (matching notify.sh)
HOSTNAME="${1:-unknown}"
CHECK_NAME="${2:-unknown}"
STATUS="${3:-3}"

# Read output from stdin
OUTPUT=$(cat)
TIMESTAMP="$(date -u +"%Y-%m-%d %H:%M:%S UTC")"

# Map status codes to names
case "$STATUS" in
    0) STATUS_NAME="OK" ;;
    1) STATUS_NAME="WARNING" ;;
    2) STATUS_NAME="CRITICAL" ;;
    3) STATUS_NAME="UNKNOWN" ;;
    *) STATUS_NAME="UNKNOWN" ;;
esac

# Check if we should send notification for this status
case "$STATUS" in
    1) [ "$NOTIFY_EMAIL_ON_WARNING" != "true" ] && exit 0 ;;
    2) [ "$NOTIFY_EMAIL_ON_CRITICAL" != "true" ] && exit 0 ;;
esac

# Rate limiting check
RATE_FILE="/var/run/checker/email_rate_${CHECK_NAME}.txt"
mkdir -p /var/run/checker
CURRENT_TIME=$(date +%s)

if [ -f "$RATE_FILE" ]; then
    # Read timestamps and filter out old ones
    NEW_TIMESTAMPS=""
    COUNT=0
    while read -r timestamp; do
        if [ $((CURRENT_TIME - timestamp)) -lt "$NOTIFY_EMAIL_RATE_WINDOW" ]; then
            NEW_TIMESTAMPS="${NEW_TIMESTAMPS}${timestamp}\n"
            COUNT=$((COUNT + 1))
        fi
    done < "$RATE_FILE"
    
    if [ $COUNT -ge "$NOTIFY_EMAIL_RATE_LIMIT" ]; then
        echo "Rate limit exceeded for $CHECK_NAME (${COUNT}/${NOTIFY_EMAIL_RATE_LIMIT} emails in ${NOTIFY_EMAIL_RATE_WINDOW}s)"
        exit 0
    fi
    
    echo -e "${NEW_TIMESTAMPS}${CURRENT_TIME}" > "$RATE_FILE"
else
    echo "$CURRENT_TIME" > "$RATE_FILE"
fi

# Truncate output if needed
if [ "$NOTIFY_EMAIL_INCLUDE_OUTPUT" = "true" ]; then
    OUTPUT_LINES=$(echo "$OUTPUT" | wc -l)
    if [ "$OUTPUT_LINES" -gt "$NOTIFY_EMAIL_MAX_OUTPUT_LINES" ]; then
        OUTPUT=$(echo "$OUTPUT" | head -n "$NOTIFY_EMAIL_MAX_OUTPUT_LINES")
        OUTPUT="${OUTPUT}\n\n... (truncated, showing first $NOTIFY_EMAIL_MAX_OUTPUT_LINES of $OUTPUT_LINES lines)"
    fi
else
    OUTPUT="(Output suppressed)"
fi

# Generate email subject
SUBJECT="${NOTIFY_EMAIL_SUBJECT_PREFIX} ${STATUS_NAME}: ${CHECK_NAME} on ${HOSTNAME}"

# Generate email body
BODY="Monitoring Alert
================

Check:     ${CHECK_NAME}
Status:    ${STATUS_NAME} (${STATUS})
Host:      ${HOSTNAME}
Time:      ${TIMESTAMP}

Output:
-------
${OUTPUT}

---
This notification was generated by the checker monitoring system.
To modify notification settings, update /etc/checker/notify_email.env"

# Send email
echo -e "$BODY" | mail -s "$SUBJECT" -r "$NOTIFY_EMAIL_FROM" "$NOTIFY_EMAIL_TO"

echo "Email notification sent to $NOTIFY_EMAIL_TO for $CHECK_NAME ($STATUS_NAME)"